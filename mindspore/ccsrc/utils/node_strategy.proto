/**
 * Copyright 2019 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package mindspore.straspb;

message ParallelStrategy {
    repeated uint32 dim = 1;
}

message ParallelStrategys {
    required uint32 stage = 1;
    repeated ParallelStrategy parallel_strategy = 2;
}

message ParallelStrategyItem {
    required string node_name = 1;
    required ParallelStrategys parallel_strategys = 2;
}

message DevMatrix {
    repeated uint32 dim = 1;
}

message TensorMap {
    repeated int32 dim = 1;
}

message ParamSplitShape {
    repeated int64 dim = 1;
}

message IndicesOffset {
    repeated int64 dim = 1;
}

message ParallelLayouts {
    repeated DevMatrix dev_matrix = 1;
    repeated TensorMap tensor_map = 2;
    repeated ParamSplitShape param_split_shape = 3;
    repeated IndicesOffset indices_offset = 4;
    required int32 field = 5;
    required int32 opt_weight_shard_step = 6;
    required int32 opt_weight_shard_size = 7;
}

message ParallelLayoutItem {
    required string param_name = 1;
    required ParallelLayouts parallel_layouts = 2;
}

message ParallelGroupRanks {
    repeated uint32 dim = 1;
}

message ParallelGroupItem {
    required string group_name = 1;
    required ParallelGroupRanks parallel_group_ranks = 2;
}

message ParallelGroupMap {
    repeated ParallelGroupItem parallel_group_item = 1;
    required ParallelGroupRanks ckpt_restore_rank_list = 2;
}

message ParallelStrategyMap {
    required uint32 current_stage = 1;
    repeated ParallelStrategyItem parallel_strategy_item = 2;
    repeated ParallelLayoutItem parallel_layout_item = 3;
}